Moj kochany pamiętniczku, dzisiejszego dnia nauczyłem się tego że:

Wykład:
Mowa była o:
Strumieniach{
  wejście - stdin (znaki z klawiatury)
  wyjście - stdout (terminal)
  wyjścia błędu - stderr

  Przekierowania strumienia
    ">" przekierowanie (standardowego wyjścia) do pliku(nadpisywanie)
    ">>" przekierowanie do pliku(dopisywanie)
    "2>" przekierowanie błędu do pliku(nadpisywanie)
    "2>>" przekierowanie błędu do pliku(dopisywanie)
    "2>&1" przekierowanie (strumień wyjścia) błędu do strumienia wyjścia
    "A|B" przekierowanie z wyjścia programu A do programu wejścia B
    "A<B" Wczytanie pliku B jako standardowe wejście do programu A
}
Potoki{
  Przekierowanie st wejscia jednego programu na standardowe wejscie drugiego programu 
     program_a | program_b
  Przekierowanie błędu do następnego programu
     program_a 2>&1 | program_b
}
Łowienie danych{
  Grep - filtruje wiersz po wierszu
  ps axu - pokazuje wielką tabelę wyjścia procesów
  -v grem - odwraca działanie grepa - nie zawiera grep
}
Operatory logiczne{
  "<" - operator standardowego wejscia
  "yes" - program drukujący tylko i wyłącznie znaki "y\n"
  "less" - wygodne do przegladania dlugich wierszy (drukowanie na ekranie)
  "-N" - doda numerację wierszy
  "tail" - drukuje ostatnich 10 wierszy pliku
  "-f" - follow - podążaj
  "tee" - wyjście do pliku oraz do pliku
  "&&" - wykonywanie dwóch programów jednocześnie bez błędu
}
Test - służy do testowania różnych rzeczy{
  "-e" - sprawdza czy istnieje
  [ -z "${zmiennaKtoraMozeBycPusta}" ] && echo "Pusta"
  "\" - ukośnik na końcu łączy wiersze (ciekawe)
  "set -e" - powoduje przerwanie działania skryptu
  "set -x" - powoduje drukowanie wszystkich zmian na stdout
}
Operacje w tle{
  "program &" - uruchomienie polecenia w tle
  "jobs" - sprawdzenie ile i jakie programy dziłają w tle
  "fg %numer" - przełączenie do pierwszego planu
  "bg" - dzięki niemu można się przełączać między jobami
}

Ćwiczenia:
Wykonywanie Zadań
CTRL + C - proces się zamyka nie naturalnie, zabija proces
CTRL + D - proces się zamyka naturalnie ale nie zamyka procesu (koniec danych wejściowych, strumień)

